version: "3"

networks:
  monitoring:
    name: "monitoring"

services:
  app_python:
    image: dyllasdek/app_python:latest
    ports:
      - "5000:5000"
    logging: &logger
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
        max-size: "100m"
    deploy:
      resources:
        limits:
          memory: 256m 

  app_kotlin:
    image: dyllasdek/app_kotlin:latest
    ports:
      - "8080:8080"
    logging:
      <<: *logger
    deploy:
      resources:
        limits:
          memory: 256m 

  loki:
    image: grafana/loki:2.9.0
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring
    logging:
      <<: *logger
  deploy:
      resources:
        limits:
          memory: 512m 

  promtail:
    image: grafana/promtail:2.9.0
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./promtail-config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    logging:
      <<: *logger
    deploy:
      resources:
        limits:
          memory: 512m 

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        - name: Prometheus
          type: prometheus
          access: proxy
          orgId: 1
          url: http://prometheus:9090
          basicAuth: false
          version: 1
          editable: false
          uid: prometheusdatasource
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - monitoring
    logging:
      <<: *logger

    prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      ports:
        - "9090:9090"
      volumes:
        - ./prometheus.yml:/etc/prometheus
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--web.enable-lifecycle'
        - '--storage.tsdb.retention.time=7d'
      logging: 
        <<: *logger
      networks:
        - monitoring
      deploy:
        resources:
          limits:
            memory: 1g
